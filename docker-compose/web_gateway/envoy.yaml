static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 80
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config: 
              '@type': 'type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager'
              stat_prefix: http_proxy
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                  - name: app
                    domains:
                    - "*"
                    routes:
                    - match:
                        prefix: '/admin'
                      route:
                        cluster: backendservice
                    - match:
                        prefix: '/todo'
                      route:
                        cluster: backendservice
                    - match:
                        prefix: '/authentication'
                      route:
                        cluster: backendservice
                    - match:
                        prefix: '/static'
                      route:
                        cluster: backendservice
                    - match:
                        prefix: '/'
                      route:
                        cluster: frontendservice
              http_filters:
                - name: envoy.filters.http.router
  clusters:
  - name: frontendservice
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment: 
      cluster_name: frontendservice
      endpoints: 
      - lb_endpoints:
        - endpoint:
            address: 
              socket_address:
                address: frontend
                port_value: 3000
  - name: backendservice
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: backendservice
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend
                port_value: 8000

